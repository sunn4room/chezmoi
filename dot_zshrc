[[ $- != *i* ]] && return

[ -f ${HOME}/.banner ] && cat ${HOME}/.banner

if [ -d ${HOME}/.oh-my-zsh ]; then
	export ZSH=$HOME/.oh-my-zsh
	ZSH_CUSTOM="${HOME}/.zsh-custom"
	DISABLE_AUTO_UPDATE="true"
	ZSH_DISABLE_COMPFIX="true"
	ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=#888888"
	ZSH_AUTOSUGGEST_STRATEGY=(history completion)
	ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
	ZSH_AUTOSUGGEST_USE_ASYNC=1
	ZSH_THEME="sunny"

	plugins=(
	    vi-mode
	)

	[ -d ${ZSH_CUSTOM}/plugins/zsh-syntax-highlighting ] && plugins=($plugins[@] zsh-syntax-highlighting)
	[ -d ${ZSH_CUSTOM}/plugins/zsh-autosuggestions ] && plugins=($plugins[@] zsh-autosuggestions)
	[ -d ${ZSH_CUSTOM}/plugins/zsh-completions ] && plugins=($plugins[@] zsh-completions)

	source $ZSH/oh-my-zsh.sh
fi

bindkey '<<' beginning-of-line
bindkey '>>' end-of-line

if command -v nvim >/dev/null 2>&1; then
	export EDITOR='nvim'
elif command -v vim >/dev/null 2>&1; then
	export EDITOR='vim'
else
	export EDITOR='vi'
fi

alias cm='podman'
alias feh='feh --action "feh --bg-fill %f" -g=900x600 --scale-down'
alias fm='lf'
alias gita='gitit add'
alias gitaa='git add --all'
alias gitb='git branch'
alias gitbn='git rev-parse --abbrev-ref HEAD'
alias gitc='git clone'
alias gitcd='git clone --depth 1'
alias gitck='git checkout'
alias gitckb='git checkout -b'
alias gitcm='git commit -m'
alias gitcm-='git commit -m "-"'
alias gitcma='git commit --amend --no-edit'
alias gitl='git log --graph --abbrev-commit --pretty=format:"%C(yellow)%h%Creset: %C(green)%s %C(blue)%d%Creset%n         %cn %ce %cr"'
alias gitm='git merge'
alias gitpl='git pull'
alias gitps='git push'
alias gitr='git reset'
alias gitrh='git reset --hard'
alias gitrs='git reset --soft'
alias gitrst='git restore'
alias gitref='git reflog'
alias gitrmt='git remote'
alias gitrmtl='git remote -v show'
alias gitrmts='git remote set-url'
alias gits='git status'
alias gitst='git stash'
alias gitstp='git stash pop'
alias h='chezmoi'
alias hs='h status'
alias hss='h status --exclude encrypted'
alias httpproxy='http_proxy=http://127.0.0.1:38457 https_proxy=http://127.0.0.1:38457'
alias httpnoproxy='http_proxy="" https_proxy=""'
alias kpl2r='rclone copy ~/keepass.kdbx jianguoyun:/keepass/'
alias kpr2l='rclone copy jianguoyun:/keepass/keepass.kdbx ~/'
#alias npm='pnpm'
alias pm='sudo pacman'
alias pma='pm -S'
alias pmz='pm -U'
alias pms='pm -Ss'
alias pmss='pm -Si'
alias pmu='pm -Sy'
alias pmuu='pm -Syu'
alias pmq='pm -Qs'
alias pmqq='pm -Qi'
alias pmqf='pm -Ql'
alias pmd='pm -Rsn'
alias pbd='ping www.baidu.com'
alias r='~/sc/run'
alias rm='rm -r'
alias rmf='rm -f'
alias v="$EDITOR"
alias vala='v ~/.config/alacritty/alacritty.yml'
alias vbsp='v ~/.config/bspwm/bspwmrc'
alias vbspr='v ~/.config/bspwm/rules.sh'
alias vdunst='v ~/.config/dunst/dunstrc'
alias vlf='v ~/.config/lf/lfrc'
alias vpicom='v ~/.config/picom.conf'
alias vsxhkd='v ~/.config/sxhkd/sxhkdrc'
alias vv='v ~/.config/nvim/init.vim'
alias vzsh='v ~/.zshrc'

re() {
	[ ! -f ~/sc/$1.sh ] && cp ~/sc/template.sh ~/sc/$1.sh
	v ~/sc/$1.sh
}

http2git() {
	url="$(git remote -v show | grep "origin" | cut -d ' ' -f 1 | cut -f 2 | head -n 1)"

	if expr "${url}" : "https://" >/dev/null 2>&1; then
		new_url=${url#https://}
		new_url=${new_url/\//:}
		new_url="git@${new_url}"
		git remote set-url origin "${new_url}"
	else
		return 1
	fi
}

kpsync() {
	rclone copy jianguoyun:/keepass/keepass.kdbx /tmp
	if [ ! -f ${HOME}/keepass.kdbx ]; then
		cp /tmp/keepass.kdbx ${HOME}/keepass.kdbx
		cp /tmp/keepass.kdbx ${HOME}/keepass.kdbx~
	fi
	if diff ${HOME}/keepass.kdbx /tmp/keepass.kdbx >/dev/null 2>&1; then
		echo "no need to sync"
		return 0
	fi
	m1="$(stat -c %y ${HOME}/keepass.kdbx)"
	m1="$(date -u -d "${m1}" +%s)"
	m2="$(rclone lsjson jianguoyun:/keepass/keepass.kdbx | jq '.[0].ModTime')"
	m2="${m2:1:0-1}"
	m2="$(date -u -d "${m2}" +%s)"
	if [ "${m1}" -lt "${m2}" ]; then
		echo "local <-- remote"
		if ! diff ${HOME}/keepass.kdbx ${HOME}/keepass.kdbx~ >/dev/null 2>&1; then
			return 1
		fi
		rclone copy jianguoyun:/keepass/keepass.kdbx ${HOME}
		echo "done"
	elif [ "${m1}" -gt "${m2}" ]; then
		echo "local --> remote"
		if ! diff /tmp/keepass.kdbx ${HOME}/keepass.kdbx~ >/dev/null 2>&1; then
			return 1
		fi
		rclone copy ${HOME}/keepass.kdbx jianguoyun:/keepass
		echo "done"
	fi
	cp -f ${HOME}/keepass.kdbx ${HOME}/keepass.kdbx~
}

rpick() {
	[ -z $1 ] && return 1
	[ -z $2 ] && return 1
	${3-xdg-open} "$(find "$1" -name "*.$2" | shuf -n1)"
}

# pnpm
export PNPM_HOME="$HOME/.local/share/pnpm"
export PATH="$PNPM_HOME:$HOME/.local/bin:$PATH"
# pnpm end

export FZF_DEFAULT_COMMAND="fd -H -L --exclude={.git,.idea,.sass-cache,node_modules,build,target}"
